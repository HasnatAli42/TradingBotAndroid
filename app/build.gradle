plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id "com.google.protobuf"
    id "kotlin-parcelize"
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.tradingbot"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
        // Enable Coroutines and Flow APIs
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'org.chromium.net:cronet-embedded:105.5195.68'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    //implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"

//    testImplementation 'junit:junit:4.13.2'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'com.google.android.gms:play-services-maps:18.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
//    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
//    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"



//    def inAppPaymentsSdkVersion = '1.5.3'
//    implementation "com.squareup.sdk.in-app-payments:card-entry:1.5.4"
//    implementation "com.squareup.sdk.in-app-payments:google-pay:$inAppPaymentsSdkVersion"


    // Play Services Wallet 16.0.1 was published with dependencies on maps & identities 16.0.0.
    implementation 'com.google.android.gms:play-services-wallet:19.1.0'
//    implementation "com.squareup.moshi:moshi-adapters:1.12.0"
//    implementation "com.squareup.moshi:moshi:1.12.0"
//    implementation "com.squareup.retrofit2:converter-moshi:2.7.2"
//    implementation 'com.squareup.retrofit2:retrofit:2.7.2'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

//    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.9.2"
    androidTestImplementation 'androidx.test:runner:1.4.0'

    implementation "com.google.android.gms:play-services-cronet:18.0.1"

    implementation 'de.charlex.compose:revealswipe:1.0.0-beta05'

    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")

//    // optional - RxJava2 support
//    implementation("androidx.work:work-rxjava2:$work_version")

    // optional - GCMNetworkManager support
    implementation("androidx.work:work-gcm:$work_version")

    // optional - Test helpers
    androidTestImplementation("androidx.work:work-testing:$work_version")

    // optional - Multiprocess support
    implementation "androidx.work:work-multiprocess:$work_version"

    implementation "io.coil-kt:coil-compose:1.3.0"


    //FireBase Dependencies
    implementation 'com.google.firebase:firebase-messaging-ktx:22.0.0'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.4.2')
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth-ktx'

    implementation  "androidx.datastore:datastore:$dataStoreVersion"
    implementation("androidx.datastore:datastore-core:$dataStoreVersion")
    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"

    implementation("com.google.android.gms:play-services-cronet:16.0.0")

    implementation("io.coil-kt:coil-compose:1.3.1")

    implementation "com.google.accompanist:accompanist-systemuicontroller:0.17.0"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}